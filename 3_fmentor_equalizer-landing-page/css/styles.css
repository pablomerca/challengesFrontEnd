:root{
    --tile-fz-desktop:48px;
}


*{
    box-sizing: border-box;
}

body{
    margin: 0px;
    padding: 62px 39px 62px 39px;
    background-image: url("bg-main-desktop.png");
   
    
    background-position-x: -10rem;
    background-position-y: -7rem;
    /* para poder mover el background en el display del body */

}

img.corner-img{
    position: absolute;
    right: 0;
    top: -32px;
    z-index: -1;

    height: 50%;
    width: auto;
}


.container{
    width: 100%;
    max-width: 1110px;
    /* el max width solo aplica cuando se pasa de 740px, para menos de eso, aplica 100% */

    margin: 0 auto;


}

header{
    z-index: 50;
    width: 100%;

}

header h3{
    margin: 0 20px 20px 0px;
    font-size: 33px;
    letter-spacing: 1px;
}


/* TEXTOS */
p, .price-freq{
    margin-right: 19.5%;

    font-family: 'Roboto', sans-serif;
    font-weight: bold;
    font-size: 19.5px;
    word-spacing: 1px;
    letter-spacing: 0.8px;
    line-height: 1.8; 
}

h1, h3{
    font-family: 'Rubik', sans-serif;
}

h1{
    margin-top: 118px;
    margin-bottom: 33px;
    margin-right: 130px;
    line-height: 1.1;
    font-size: 85px;
    
}

.black-container{
    
    width: 100%;
    height: 600px;
    border-radius: 15px;
    background-color: black;
    margin-top: 300px;
    margin-bottom: 200px;
    position: relative;

    margin-left: 0px;
    margin-right: 0px;
}

.offer{
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    position: absolute;
    z-index: 20;

    top: 88px;
    right: 95px;
    

    width: 449px;
    height: 617px;
    border-radius: 15px;
    padding:  55px 55px 45px 55px;

    margin: 0px;

    
    background-color: #FA7453;
    color: rgb(255, 255, 255);
    
    
}

.offer p{
    position: relative;
    margin: 0px;
}

.offer h2, .price-tag, .button{
    font-family: 'Rubik', sans-serif;
    font-size: 41px;
    margin: 0px;
}

img.bg-pat{
    z-index: auto;
    position: absolute;
    left: 337px;
    top: -37px;
}

.fto-celular{
    z-index: 10;
    position: absolute;
    width: 330px;
    top: -220px;
    left: 85px;
}

.button{
    width: 100%;
    display: block;
    text-align: center;
    padding: 20px;
    border-radius: 10px;
    font-size: 19px;
    text-decoration: none;
}

.button-ios{
    color: white;
    background-color: black;
}

.button-andr{
    color: black; 
    background-color: white;
    margin-bottom: 0px;
    margin-top: 19px;
    
}

.button-ios::before{
    content: url(icon-apple.svg);
    margin-right: 10px;
    position: relative;
    top:3px;
    
}
.button-andr::before{
    content: url(/css/icons/icon-android.svg);    /*el path se copia escribiendo /carpeta/... */
    margin-right: 10px;
    position: relative;
    top:3px;
}

/* button::berfore es un pseudo-elemento, asi que no puedo hacer el truco de crear
clases que engloben propiedades en comun y abajo especificar para a horrar css, un bajon... */


.price-tag{
    font-size: 64px;
    /* margin: 683px 0px;   */
}

.price-freq{
    position: relative;
    bottom: 13px;
    margin-left: 9px;
}

footer{
    display: flex;
    margin: 0px;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
    position: relative;
    
}
.footer-text p {
    font-size: 15px;
    margin: 0px;
    width: 360px;
}



.logos{
    display: flex;
    width: 95px;
    align-items: center;
    justify-content: space-between;
}
.mail{
    font-weight: 900;
}



/* PANTALLA TABLET */

@media screen and (max-width: 770px) {
    body{
        background-image: url("bg-main-tablet.png");
       
    }

    h1{
        font-size: 64px;
    }
    p{
        margin-right: 10px;
        font-size: 16px;
        line-height: 1.7;
        
    }
    .offer h2{
        font-size: 29px;
    }
    img.bg-pat{
        left: 180px;
    }

    .fto-celular{
       
        width: 270px;

        top: -220px;
        left: 85px;
    }
    .offer{
        width: 400px;
        height: 544px;
        padding: 48px;

        top: 88px;
        right: 65px;
    }
    .black-container{
        margin-bottom: 140px;
    }
    
}

/* PANTALLA MOBILE */

@media screen and (max-width: 577px) {
    body{
        background-image: url("bg-main-mobile.png");
        padding-right: 0px;
        padding-left: 0px;

    }
    header{
        padding-left: 39px;
    }

    img.corner-img{
        display: none;
    }
    .container-black{
       margin-top: 230px;

    }

    h1{
        margin-right: 10px;
    }

    p{
        margin-right: 20px;
    }
    .offer{
        width: 100%;
        right: 0px;
        top: 400px;
        
    }
    img.bg-pat{
        width: 290px;
        left: 90px;
        top:0;
    }
    .fto-celular{
        width: 240px;
        top: -150px;
        left: 115px;
    }

    footer{
        margin-top: 450px;
    }


}


/* ESCALON DE PADDING/WIDTH DEL CONTAINER */

/* @media screen and (max-width: 1236px) {
    body{
        padding: 62px 39px 62px 39px;
    }

} */

/* Enmarcado de hijos dentro de padre: a la hora de alinear items dentro de un contenedor, si quiero conseguir que todos esten "enmarcados" por una misma medida
de los bordes a modo de  "margen", es buena practica darles  width 100% y luego crear distancia de los bordes con padding, anteriormente
se debe poner box size: bordes-box... asi, el padding se crea hacia adentro y reduce las medidas del contenido en si, creando la distancia deseada...

/* alinear con flexbox: a la hora de alinear verticalmente, es una buena practica, en lugar de joder con margenes, ponerle flex al padre y luego  
justify-content: space-between. esto llevara a laos elementos de los costados limites a los extremos de los marcos que habiamos creado con los paddings
del padre, y creara igual separacion entre los hijos...
si usaramos space-arround como nos dice la intuicion, crearia separacion entre los "margenes marco" del padre y sus elementos contiguos, y no queremos
mas separacion de la que ya le dimos...  */

/* flexbox en los botones: cuando tenemos adentro de un boton, texto e iconos, podemos acudir al pseudoelemento ::before para contener el icoono
y usar la caja del boton ( <a> ) como contenedor flex padre, siendo sus hijos, el texto y el icono psudo-elemento... asi podemos alinear en contenido
del boton usando propiedades flex, izi  */

/* nota: si posiciono un elemento como relativo y lo muevo, puedo lograr que se slaga de su contenedor, osea que sea medio fantasma fuera de este */

